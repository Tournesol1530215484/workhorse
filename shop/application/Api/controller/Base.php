<?php
/**
 * @Author: Marte
 * @Date:   2018-11-06 21:25:03
 * @Last Modified by:   Marte
 * @Last Modified time: 2018-11-15 22:07:45
 */
namespace app\Api\controller;
use think\Controller;
class Base extends controller{

   // protected $return_msg = array('code'=>'0','result'=>'');
        //预定义函数
        public function __initialize(){
            parent::_initialize(); // TODO: Change the autogenerated stub
             $this->request=Request::instance();
        }

        //验证邮箱和手机号是不是合法
        /**
         * [check_is_legitimate description  判断手机号和邮箱是否是有效的]
         * @param  [String] $registered [传过来的类型]
         * @return [int]             [状态码]
         */
        public function check_is_legitimate($registered,$value){
             $code='';
            if($registered=='phone'){
                $code=preg_match("/^1[34578]\d{9}$/",$value)?0:1;
            }if($registered=='email'){
                $code=preg_match("/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]{2,6}$/", $value)?2:4;
            }
            switch ($code) {
                case '1':
                    $this->return_msg(400,'手机号码不正确，请重新输入！');
                    break;
                
                case '4':
                    $this->return_msg(400,'邮件地址格式不正确，请重新输入！');
                    break;
            }
        }

        //判断这个值有没有注册
        /**
         * [is_exists  判断手机或者邮箱已经被注册]
         * @param  [String]  $registered [手机号或者邮箱号]
         * @return boolean             [200不存在，400已经存在]
         */
        public function is_exists($registered){
            //$type_num=$registered=='email'?2:4;
            $phone_exists=db('user')->where('phone_num',$registered)->find();
            $email_exists=db('user')->where('email',$registered)->find();
            $name_exists=db('user')->where('username',$registered)->find();
            //$temp=$type_num+$phone_exists+$email_exists;
           if($phone_exists){
                $this->return_msg(400,'该手机已经被注册，直接登录！');
                
           }else if($email_exists){
                $this->return_msg(400,'该邮箱已经被注册，请直接登录！');
              
           }else if($name_exists){
                $this->return_msg(400,'改昵称已经被注册，请直接登录!');
            }

        }

        //获取验证码函数
        /**
         * [getcode 获取验证码]
         * @param  [int] $num [验证码位数]
         * @return [int]      [返回值]
         */
        public function getcode($num){
            $code='';
            $min=pow(10,($num-1));
            $max=pow(10,($num))-1;
            $code=rand($min,$max);
            return $code;
        }


        //返回值的处理（返回的数据格式为json）
        /**
         * @param [int] [$code] [状态码]
         * @param [String] [$msg] [提示信息]
         * @param [Array] [$data] [返回值]
         */
        protected function return_msg($code,$msg='',$data[]){
            $return_msg['code']=$code;
            $return_msg['msg']=$msg;
            $return_msg['data']=$data;
            return json_encode($return_msg);
           // die;
        }
        


}